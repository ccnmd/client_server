
ChatApp Documentation

1. High-Level Design (HLD)

 1.1. Mục tiêu hệ thống

- Cung cấp một ứng dụng chat console đơn giản giữa nhiều client thông qua một server trung tâm.
- Hỗ trợ gửi và nhận tin nhắn theo thời gian thực.
- Quản lý đăng nhập bằng tài khoản cố định.

 1.2. Chức năng chính

* Server:

  - Quản lý kết nối của nhiều client.
  - Phân phối tin nhắn đến tất cả client còn lại.
  - Ghi lại lịch sử chat.
* Client:

  - Cho phép người dùng đăng nhập bằng username/password.
  - Gửi và nhận tin nhắn qua terminal.

 1.3. Phạm vi

- Giao diện dòng lệnh (CLI).
- Giao tiếp nội bộ mạng LAN qua TCP socket.



2. Architecture Overview

 2.1. Kiến trúc hệ thống

  - Client-Server model
  - Giao tiếp qua socket TCP (`AF_INET`, `SOCK_STREAM`)
  - Sử dụng `select()` để multiplex I/O trên server (multi-client chat)
  - Xác thực người dùng đơn giản bằng tài khoản cứng.

















 2.2. Công nghệ sử dụng

| Thành phần | Công nghệ      |
| ---------- | -------------- |
| Ngôn ngữ   | C              |
| Giao tiếp  | TCP Socket     |
| Xử lý I/O  | `select()`     |
| OS hỗ trợ  | Ubuntu / Linux |

#### 2.3. Thư viện chuẩn sử dụng

* `<stdio.h>`, `<stdlib.h>`, `<string.h>`, `<unistd.h>`, `<sys/socket.h>`, `<netinet/in.h>`, `<arpa/inet.h>`, `<fcntl.h>`, `<sys/select.h>`

---

### 3. 🧩 Diagrams

#### 3.1. Sequence Diagram: Gửi tin nhắn từ Client A đến Client B

```plaintext
Client A         Server             Client B
   |                |                  |
[Login] --------->  |                  |
                    | <---- Verify ---|
                    |                 |
[Send msg] -------> |                 |
                    | --- Broadcast --------> [Receive msg]
```

#### 3.2. Sơ đồ luồng dữ liệu cơ bản

```mermaid
flowchart TD
    subgraph Server
        S1[Accept Client]
        S2[Check login]
        S3[Receive message]
        S4[Broadcast to all]
    end

    subgraph Client
        C1[Login with fixed creds]
        C2[Send message]
        C3[Receive message]
    end

    C1 --> S1 --> S2 --> C2 --> S3 --> S4 --> C3
```

---

### 4. 📁 Folder Structure

```bash
chatapp/
├── server.c           # Server-side code
├── client.c           # Client-side code
├── user_db.txt          # (Optional) Danh sách tài khoản
├── chat_history.txt   # Ghi lại lịch sử chat (server tạo)
├── chat_log.txt
├── Makefile
├── README.md          # Tài liệu mô tả


---

 5. Cách biên dịch và chạy

Server:

##bash:
gcc server.c -o server
./server <port>


 Client:

##bash:
gcc client.c -o client
./client <server_ip> <port>





### 7. 📝 Ghi chú

* Server sử dụng `select()` để hỗ trợ nhiều kết nối không đồng bộ.
* Tài khoản người dùng hiện tại được viết cứng trong code (`username == "user" && password == "pass"`).
* Server lưu lịch sử chat trong file `chat_history.txt`.


